name: Trust Vault CI

env:
  RUN_SYSTEM: 'ubuntu-latest'
  GO_VERSION: '1.24'

on:
  push:
    branches: [ main, master, dev, feature, release ]
  pull_request:
    branches: [ main, master, dev, feature, release ]

jobs:
  build:
    name: Build
    runs-on: ${{ env.RUN_SYSTEM }}
    steps:
      - name: set up golang
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
      - name: check out code
        uses: actions/checkout@v4
      - name: download dependencies
        run: go mod download
      - name: build
        run: go build -v ./...

  test:
    name: Test
    needs: build
    runs-on: ${{ env.RUN_SYSTEM }}
    steps:
      - name: set up golang
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
      - name: check out code
        uses: actions/checkout@v4
      - name: download dependencies
        run: go mod download
      - name: run test
        run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...
      - name: upload coverage
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.txt
          fail_ci_if_error: false

  lint:
    name: Lint
    needs: build
    runs-on: ${{ env.RUN_SYSTEM }}
    steps:
      - name: set up golang
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
      - name: check out code
        uses: actions/checkout@v4
      - name: run lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest
          args: --timeout=5m --config=.golangci.yml

  security-scan:
    name: Security Scan
    needs: build
    runs-on: ${{ env.RUN_SYSTEM }}
    steps:
      - name: check out code
        uses: actions/checkout@v4
      - name: run security scanner
        uses: securego/gosec@master
        with:
          args: ./...

  benchmarks:
    name: Benchmarks
    needs: build
    runs-on: ${{ env.RUN_SYSTEM }}
    steps:
      - name: set up golang
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
      - name: check out code
        uses: actions/checkout@v4
      - name: run test bench
        run: go test -bench=. -benchmem ./...